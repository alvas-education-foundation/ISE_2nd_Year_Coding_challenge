//1)	Write a Java program to find the index of an array element.

import java.util.*; 
public class index { 
  
   
    public static int findIndex(int arr[], int t) 
    { 
  
        
        if (arr == null) { 
            return -1; 
        } 
  
        // find length of array 
        int len = arr.length; 
        int i = 0; 
  
         
        while (i < len) { 
  
            
            if (arr[i] == t) { 
                return i; 
            } 
            else { 
                i = i + 1; 
            } 
        } 
        return -1; 
    } 
  
    public static void main(String[] args) 
    { 
        int[] my_array = { 5, 4, 6, 1, 3, 2, 7, 8, 9 }; 
  
        System.out.println("Index position of 5 is: "
                           + findIndex(my_array, 5)); 
  
       
        System.out.println("Index position of 7 is: "
                           + findIndex(my_array, 7)); 
    } 
} 

//2)	Write a Java program to find the duplicate values of an array of integer values

import java.util.Arrays; 
import java.*;
 class Main {
  public static void main(String[] args) 
    {
        int[] my_array = {1, 2, 5, 5, 6, 6, 7, 2};
 
        for (int i = 0; i < my_array.length-1; i++)
        {
            for (int j = i+1; j < my_array.length; j++)
            {
                if ((my_array[i] == my_array[j]) && (i != j))
                {
                    System.out.println("Duplicate Element : "+my_array[j]);
                }
            }
        }
    }    
}

//3)	Write a Java program to get a date before and after 1 year compares to the current date.


import java.util.*;
 class Main{
   public static void main(String[] args)
    {
      Calendar cal = Calendar.getInstance();
      Date cdate = cal.getTime();
      // get next year
      cal.add(Calendar.YEAR, 1); 
      Date nyear = cal.getTime();
      //get previous year
      cal.add(Calendar.YEAR, -2); 
      Date pyear = cal.getTime();
      System.out.println("\nCurrent Date : " + cdate);
      System.out.println("\nDate before 1 year : " + pyear);
      System.out.println("\nDate after 1 year  : " + nyear+"\n");  	
    }
}

/*4)	Solve the challenge where,
You are given a  2D array. An hourglass in an array is a portion shaped like this:
a b c
d
e f g....*/


#include<bits/stdc++.h>
int main(){

    int ar[10][10],maxSum = -36985247;
    for(int i = 0; i < 6; i++){
        for(int j = 0; j < 6; j++)cin >> ar[i][j];
    }

    for(int i = 0; i < 6; i++){
        for(int j = 0; j < 6; j++){
            if(j+2 < 6 && i+2 < 6 ){
                int sum = ar[i][j] + ar[i][j+1] + ar[i][j+2] + ar[i+1][j+1] + ar[i+2][j] + ar[i+2][j+1] + ar[i+2][j+2];
                if(sum > maxSum)maxSum = sum;
            }
        }
    }
    cout << maxSum << endl;
    return 0;
}
